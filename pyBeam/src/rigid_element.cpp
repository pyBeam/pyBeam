/*
 * pyBeam, an open-source Beam Solver
 *
 * Copyright (C) 2019 by the authors
 *
 * File developers: Rocco Bombardieri (Carlos III University Madrid)
 *                  Rauno Cavallaro (Carlos III University Madrid)
 *
 * This file is part of pyBeam.
 *
 * pyBeam is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License
 * as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * pyBeam is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * See the GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero
 * General Public License along with pyBeam.
 * If not, see <http://www.gnu.org/licenses/>.
 *
 */


#include "../include/rigid_element.h"
#include <iostream>

CRBE2::CRBE2(int RBE2_ID) {
    iRBE2 = RBE2_ID;
};

void CRBE2::setGlobalDOFs() {

    int nodeIndexM = node_master-> GeID();
    int nodeIndexS = node_slave-> GeID();
    int i = 0;
    for (int i = 1; i <= 6; i++) {
        // This coefficients will be used to asseble full_to_red and red_to_full vectors which have 0 expressing no relation so it is decided that DOFs will be from 1 to 6
        MasterDOFs(i - 1) = (nodeIndexM - 1)*6 + i; // -1;
        SlaveDOFs(i - 1) = (nodeIndexS - 1)*6 + i; // -1;
    };

};

void CRBE2::setLength() {
    addouble a = node_slave->GetCoordinate0(0) - node_master->GetCoordinate0(0);
    addouble b = node_slave->GetCoordinate0(1) - node_master->GetCoordinate0(1);
    addouble c = node_slave->GetCoordinate0(2) - node_master->GetCoordinate0(2);
    addouble intermediate = pow(a, 2) + pow(b, 2) + pow(c, 2);
    l_rigid = sqrt(intermediate);

};

void CRBE2::InitializeAxisVector() {

    addouble a = node_slave->GetCoordinate0(0) - node_master->GetCoordinate0(0);
    addouble b = node_slave->GetCoordinate0(1) - node_master->GetCoordinate0(1);
    addouble c = node_slave->GetCoordinate0(2) - node_master->GetCoordinate0(2);

    axis_vector0 = VectorXdDiff::Zero(3);
    axis_vector0(0) = a;
    axis_vector0(1) = b;
    axis_vector0(2) = c;


    axis_vector_old = axis_vector0;
    axis_vector = axis_vector0;
}

void CRBE2::InitializeKinemMatrix() {

    Kinem_matrix = MatrixXdDiff::Identity(6, 6);
    MStrans = MatrixXdDiff::Zero(3, 3);

    /*        Kprim = [        0         axis_vector(3)   -axis_vector(2);
     -axis_vector(3)        0           axis_vector(1);
     axis_vector(2) -axis_vector(1)        0            ];*/

    MStrans << 0, axis_vector0(3 - 1), -axis_vector0(2 - 1),
            -axis_vector0(3 - 1), 0, axis_vector0(1 - 1),
            axis_vector0(2 - 1), -axis_vector0(1 - 1), 0;


    MStrans0 = MStrans;
    MStrans_old = MStrans;

    Kinem_matrix.block(1 - 1, 4 - 1, 3, 3) = MStrans;
    Kinem_matrix0 = Kinem_matrix;
    Kinem_matrix_old = Kinem_matrix;
    //std::cout << "  Kinem_matrix = \n" << Kinem_matrix << std::endl;
}

void CRBE2::UpdateKinemMatirx() {

    MStrans_old = MStrans;

    Kinem_matrix_old = Kinem_matrix;

    Kinem_matrix = MatrixXdDiff::Identity(6, 6);
    MatrixXdDiff MStrans = MatrixXdDiff::Zero(3, 3);

    MStrans << 0, axis_vector(3 - 1), -axis_vector(2 - 1),
            -axis_vector(3 - 1), 0, axis_vector(1 - 1),
            axis_vector(2 - 1), -axis_vector(1 - 1), 0;

    Kinem_matrix.block(1 - 1, 4 - 1, 3, 3) = MStrans;
    //std::cout << "  Kinem_matrix = \n" << Kinem_matrix << std::endl;

}

void CRBE2::Initializer(CNode* Node_mast, CNode* Node_slv) {

    // Associate the nodes object
    SetNode_1(Node_mast);
    SetNode_2(Node_slv);
    // Calculate element DOFs
    setGlobalDOFs();
    // set rigid element length
    setLength();
    // Initialize dimensional axis vector
    InitializeAxisVector();


    InitializeKinemMatrix();


}

void CRBE2::EvalConstraintEquation(VectorXdDiff Um, VectorXdDiff Us)
{
    // This residual is added not to make the formulas below indefinite
    addouble um_1 = Um(1 - 1) + pow(10, -22.0);
    addouble um_2 = Um(2 - 1) + pow(10, -22.0);
    addouble um_3 = Um(3 - 1) + pow(10, -22.0);
    addouble um_4 = Um(4 - 1) + pow(10, -22.0);
    addouble um_5 = Um(5 - 1) + pow(10, -22.0);
    addouble um_6 = Um(6 - 1) + pow(10, -22.0);
    addouble us_1 = Us(1 - 1) + pow(10, -22.0);
    addouble us_2 = Us(2 - 1) + pow(10, -22.0);
    addouble us_3 = Us(3 - 1) + pow(10, -22.0);
    addouble us_4 = Us(4 - 1) + pow(10, -22.0);
    addouble us_5 = Us(5 - 1) + pow(10, -22.0);
    addouble us_6 = Us(6 - 1) + pow(10, -22.0);
    addouble Dx = axis_vector0(1 - 1);
    addouble Dy = axis_vector0(2 - 1);
    addouble Dz = axis_vector0(3 - 1);

    g = VectorXdDiff::Zero(6);

    g(0) = -um_1 + us_1 + Dy * (um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))*1.0 / sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(um_4 * um_5 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - Dz * (um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))*1.0 / sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(um_4 * um_6 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))-(Dx * (um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0));
    g(1) = -um_2 + us_2 - Dx * (um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))*1.0 / sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(um_4 * um_5 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) + Dz * (um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))*1.0 / sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(um_5 * um_6 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))-(Dy * (um_4 * um_4 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0));
    g(2) = -um_3 + us_3 + Dx * (um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))*1.0 / sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(um_4 * um_6 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - Dy * (um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))*1.0 / sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(um_5 * um_6 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))-(Dz * (um_4 * um_4 + um_5 * um_5)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0));
    g(3) = -um_4 + us_4;
    g(4) = -um_5 + us_5;
    g(5) = -um_6 + us_6;

    /*   DEBUG
    cout << "Um = \n" <<Um << endl;
    cout << "Us = \n" <<Us << endl;
    cout << "D = \n" <<Dx << Dy << Dz << endl;
    cout << "Constraint equation leads = \n" <<g << endl;
    cout << "Test equation = \n" <<sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) << endl;
    */
}

void CRBE2::EvalJacobian(VectorXdDiff Um, VectorXdDiff Us)
{
    // This residual is added not to make the formulas below indefinite
    addouble um_1 = Um(1 - 1) + pow(10, -22.0);
    addouble um_2 = Um(2 - 1) + pow(10, -22.0);
    addouble um_3 = Um(3 - 1) + pow(10, -22.0);
    addouble um_4 = Um(4 - 1) + pow(10, -22.0);
    addouble um_5 = Um(5 - 1) + pow(10, -22.0);
    addouble um_6 = Um(6 - 1) + pow(10, -22.0);
    addouble us_1 = Us(1 - 1) + pow(10, -22.0);
    addouble us_2 = Us(2 - 1) + pow(10, -22.0);
    addouble us_3 = Us(3 - 1) + pow(10, -22.0);
    addouble us_4 = Us(4 - 1) + pow(10, -22.0);
    addouble us_5 = Us(5 - 1) + pow(10, -22.0);
    addouble us_6 = Us(6 - 1) + pow(10, -22.0);
    addouble Dx = axis_vector0(1 - 1);
    addouble Dy = axis_vector0(2 - 1);
    addouble Dz = axis_vector0(3 - 1);

    J = MatrixXdDiff::Zero(6,12);

    J(0,0) = -1.0;
    J(0,3) = -Dy * (-(um_5 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0) - Dz * (-(um_6 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * fabs(um_4)*((um_4 / fabs(um_4)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0;
    J(0,4) = -Dy * (-(um_4 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0) - Dz * (sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))*1.0 / sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0)-(Dx * um_5 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * fabs(um_5)*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0;
    J(0,5) = -Dz * (-(um_4 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0) - Dy * (-sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))*1.0 / sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0)-(Dx * um_6 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * fabs(um_6)*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0;
    J(0,6) = 1.0;
    J(1,1) = -1.0;
    J(1,3) = -Dx * (-(um_5 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0) - Dz * (-sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))*1.0 / sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(um_4 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0)-(Dy * um_4 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dy * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*(um_4 * um_4 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dy * fabs(um_4)*((um_4 / fabs(um_4)))*(um_4 * um_4 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0;
    J(1,4) = -Dx * (-(um_4 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0) - Dz * (-(um_6 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(um_4 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0) + Dy * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*(um_4 * um_4 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dy * fabs(um_5)*((um_5 / fabs(um_5)))*(um_4 * um_4 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0;
    J(1,5) = -Dz * (-(um_5 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(um_4 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0) - Dx * (sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))*1.0 / sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0)-(Dy * um_6 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dy * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*(um_4 * um_4 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dy * fabs(um_6)*((um_6 / fabs(um_6)))*(um_4 * um_4 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0;
    J(1,7) = 1.0;
    J(2,2) = -1.0;
    J(2,3) = -Dx * (-(um_6 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0) - Dy * (sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))*1.0 / sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(um_4 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0)-(Dz * um_4 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dz * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*(um_4 * um_4 + um_5 * um_5)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dz * fabs(um_4)*((um_4 / fabs(um_4)))*(um_4 * um_4 + um_5 * um_5)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0;
    J(2,4) = -Dy * (-(um_6 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(um_4 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0) - Dx * (-sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)))*1.0 / sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0)-(Dz * um_5 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dz * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*(um_4 * um_4 + um_5 * um_5)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dz * fabs(um_5)*((um_5 / fabs(um_5)))*(um_4 * um_4 + um_5 * um_5)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0;
    J(2,5) = -Dx * (-(um_4 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0) - Dy * (-(um_5 * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(um_4 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0) + Dz * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*(um_4 * um_4 + um_5 * um_5)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dz * fabs(um_6)*((um_6 / fabs(um_6)))*(um_4 * um_4 + um_5 * um_5)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0;
    J(2,8) = 1.0;
    J(3,3) = -1.0;
    J(3,9) = 1.0;
    J(4,4) = -1.0;
    J(4,10) = 1.0;
    J(5,5) = -1.0;
    J(5,11) = 1.0;

//    cout << "Constraint Jacobian leads = \n" <<J << endl;

}

void CRBE2::EvalHessian(VectorXdDiff Um, VectorXdDiff Us) {

    addouble um_1 = Um(1 - 1) + pow(10, -22.0);
    addouble um_2 = Um(2 - 1) + pow(10, -22.0);
    addouble um_3 = Um(3 - 1) + pow(10, -22.0);
    addouble um_4 = Um(4 - 1) + pow(10, -22.0);
    addouble um_5 = Um(5 - 1) + pow(10, -22.0);
    addouble um_6 = Um(6 - 1) + pow(10, -22.0);
    addouble us_1 = Us(1 - 1) + pow(10, -22.0);
    addouble us_2 = Us(2 - 1) + pow(10, -22.0);
    addouble us_3 = Us(3 - 1) + pow(10, -22.0);
    addouble us_4 = Us(4 - 1) + pow(10, -22.0);
    addouble us_5 = Us(5 - 1) + pow(10, -22.0);
    addouble us_6 = Us(6 - 1) + pow(10, -22.0);
    addouble Dx = axis_vector0(1 - 1);
    addouble Dy = axis_vector0(2 - 1);
    addouble Dz = axis_vector0(3 - 1);

    H_0 = MatrixXdDiff::Zero(12,12);
    H_1 = MatrixXdDiff::Zero(12,12);
    H_2 = MatrixXdDiff::Zero(12,12);
    H_3 = MatrixXdDiff::Zero(12,12);
    H_4 = MatrixXdDiff::Zero(12,12);
    H_5 = MatrixXdDiff::Zero(12,12);

    /**
     * @todo Cleanup RBE2 Hessian
     * @body These expressions are too long for CoDi, that's why they are commented out. Cleanup and rewrite.
     */

    H_0(3,3) = -Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_5 * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_6 * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_0(3,4) = -Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_0(3,5) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_0(4,3) = -Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_0(4,4) = -Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_5 * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + um_4 * um_6 * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_4 * um_6 * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0)-(Dx * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) + Dx * um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*8.0 - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_0(4,5) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_0(5,3) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_0(5,4) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_0(5,5) = -Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_6 * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + um_4 * um_5 * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_4 * um_5 * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0)-(Dx * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) + Dx * um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*8.0 - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_1(3,3) = -Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_5 * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_6 * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_1(3,4) = -Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_1(3,5) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_1(4,3) = -Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_1(4,4) = -Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_5 * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + um_4 * um_6 * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_4 * um_6 * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0)-(Dx * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) + Dx * um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*8.0 - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_1(4,5) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_1(5,3) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_1(5,4) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_1(5,5) = -Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_6 * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + um_4 * um_5 * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_4 * um_5 * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0)-(Dx * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) + Dx * um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*8.0 - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_2(3,3) = -Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_5 * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_6 * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_2(3,4) = -Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_2(3,5) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_2(4,3) = -Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_2(4,4) = -Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_5 * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + um_4 * um_6 * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_4 * um_6 * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0)-(Dx * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) + Dx * um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*8.0 - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_2(4,5) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_2(5,3) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_2(5,4) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_2(5,5) = -Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_6 * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + um_4 * um_5 * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_4 * um_5 * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0)-(Dx * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) + Dx * um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*8.0 - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_3(3,3) = -Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_5 * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_6 * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_3(3,4) = -Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_3(3,5) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_3(4,3) = -Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_3(4,4) = -Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_5 * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + um_4 * um_6 * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_4 * um_6 * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0)-(Dx * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) + Dx * um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*8.0 - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_3(4,5) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_3(5,3) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_3(5,4) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_3(5,5) = -Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_6 * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + um_4 * um_5 * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_4 * um_5 * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0)-(Dx * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) + Dx * um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*8.0 - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_4(3,3) = -Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_5 * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_6 * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_4(3,4) = -Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_4(3,5) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_4(4,3) = -Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_4(4,4) = -Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_5 * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + um_4 * um_6 * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_4 * um_6 * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0)-(Dx * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) + Dx * um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*8.0 - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_4(4,5) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_4(5,3) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_4(5,4) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_4(5,5) = -Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_6 * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + um_4 * um_5 * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_4 * um_5 * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0)-(Dx * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) + Dx * um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*8.0 - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_5(3,3) = -Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_5 * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_6 * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_4), 2.0) * pow((um_4 / fabs(um_4)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_5(3,4) = -Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_5(3,5) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_5(4,3) = -Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_5)*((um_4 / fabs(um_4)))*((um_5 / fabs(um_5)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_5(4,4) = -Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_5 * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_5 * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))+(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + um_4 * um_6 * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_4 * um_6 * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0)-(Dx * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) + Dx * um_5 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*8.0 - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_5), 2.0) * pow((um_5 / fabs(um_5)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_5(4,5) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_5(5,3) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_4 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4)*((um_4 / fabs(um_4)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_4)*((um_4 / fabs(um_4)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_4) * fabs(um_6)*((um_4 / fabs(um_4)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_5(5,4) = -Dy * (-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_5 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) - Dz * ((cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - um_4 * um_6 * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)) + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5)*((um_5 / fabs(um_5)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + Dx * um_6 * fabs(um_5)*((um_5 / fabs(um_5)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * um_5 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * fabs(um_5) * fabs(um_6)*((um_5 / fabs(um_5)))*((um_6 / fabs(um_6)))*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
    H_5(5,5) = -Dz * ((um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * um_6 * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_4 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*4.0 - um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 - um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + um_4 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 - um_4 * um_6 * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0) - Dy * (-(um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))-(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*2.0 + um_4 * um_5 * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + um_6 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*3.0 + um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*3.0 + um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) - um_4 * um_5 * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0 + um_4 * um_5 * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) - um_4 * um_5 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0)-(Dx * (cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*2.0) / (pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0)) + Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0) + Dx * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*2.0 + Dx * um_6 * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * fabs(um_6)*((um_6 / fabs(um_6)))*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0 / 2.0)*4.0 + Dx * cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0) + Dx * um_6 * fabs(um_6)*((um_6 / fabs(um_6)))*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 2.0)*8.0 - Dx * sin(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 5.0 / 2.0)*5.0 - Dx * pow(fabs(um_6), 2.0) * pow((um_6 / fabs(um_6)), 2.0)*(um_5 * um_5 + um_6 * um_6)*(cos(sqrt(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0))) - 1.0)*1.0 / pow(pow(fabs(um_4), 2.0) + pow(fabs(um_5), 2.0) + pow(fabs(um_6), 2.0), 3.0)*8.0;
}

CRBE2::~CRBE2(void) {
};
